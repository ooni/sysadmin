#!/usr/bin/env bash
set -ue

export ANSIBLE_NOCOWS=1

if [ -z ${OONI_SYSADMIN_HOME+x} ]; then
    OONI_SYSADMIN_HOME=$HOME/.ooni-sysadmin
fi
LOGS_DIR=$OONI_SYSADMIN_HOME/logs
PRIVATE_DIR=$OONI_SYSADMIN_HOME/private

# use tmpfs when on Linux, FIXME: add relevant clause for Darwin as well
if [ -d "/run/user/$(id -u)" ]; then
    TMPDIR="/run/user/$(id -u)"
    export TMPDIR
fi

if [ ! -d "$OONI_SYSADMIN_HOME" ]; then
    mkdir -p "$OONI_SYSADMIN_HOME"
    mkdir -p "$LOGS_DIR"
    mkdir -p "$PRIVATE_DIR"
    chmod 700 "$PRIVATE_DIR"
fi

cmd=$(basename "$0")
case "$cmd" in
  play)
    binary=ansible-playbook
    ;;
  ansible)
    binary=ansible
    ;;
  *)
    echo "Unknown command in argv0: $0" 1>&2
    exit 1
    ;;
esac

ANSIBLE_SLACK_CMD=`printf "%q " "$0" "$@"`
ANSIBLE_SLACK_CMD="${ANSIBLE_SLACK_CMD% }" # strip trailing whitespace
export ANSIBLE_SLACK_CMD

if [ -t 0 -a -t 1 -a -t 2 ]; then
  uname=`uname -s`
  if [ "$uname" = Linux ]; then
    if [ -z "$BASH_VERSION" ]; then
      exec bash "$0" "$@"
    else
      # I need some internal bash `printf` supporting %q, also filename limit of 255 chars should be enforced.
      name=$(echo "$cmd" "$@" | sed 's/[^-+=a-zA-Z0-9_]/_/g; s/__*/_/g; s/^\(.\{200\}\).*/\1.../').$(date +%Y.%m.%d.%H.%M.%S).$$.$(tput cols)x$(tput lines)
      args=$(printf "%q " "$@")
      exec /usr/bin/script --append --return --timing="$LOGS_DIR/${name}.timing" -c "$binary --vault-password-file ./password-pipe --inventory-file ./inventory.yml $args" "$LOGS_DIR/${name}.log"
    fi
  elif [ "$uname" = Darwin ]; then
    name=`echo "$cmd" "$@" | sed s/[^-+=a-zA-Z0-9_]/_/g`.`date +%Y.%m.%d.%H.%M.%S`.$$.log
    exec script -a "$LOGS_DIR/$name" "$binary" --vault-password-file ./password-pipe --inventory-file ./inventory "$@"
  else
    echo "$0: don't know how to launch \`script\` at $uname." 1>&2
    # fall-through
  fi
fi
exec "$binary" --vault-password-file ./password-pipe --inventory-file ./inventory "$@"
