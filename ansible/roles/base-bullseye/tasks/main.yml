---
- name: motd
  shell: echo "" > /etc/motd

- name: Remove apt repo
  tags: apt
  file:
    path: /etc/apt/sources.list.d/ftp_nl_debian_org_debian.list
    state: absent

- name: Remove apt repo
  tags: apt
  file:
    path: /etc/apt/sources.list.d/security_debian_org.list
    state: absent

- name: Set apt repos
  tags: apt
  template:
    src: templates/sources.list
    dest: /etc/apt/sources.list
    mode: 0644
    owner: root

- name: Install gpg
  tags: base-packages
  apt:
    install_recommends: no
    cache_valid_time: 86400
    name:
      - gpg
      - gpg-agent
      - dirmngr

- name: Import OONI private repo gpg key
  tags: apt
  command: apt-key adv --verbose --keyserver hkp://keyserver.ubuntu.com --recv-keys B5A08F01796E7F521861B449372D1FF271F2DD50

- name: Update apt cache
  tags: apt
  apt:
    update_cache: yes

- name: Installs base packages
  tags: base-packages
  apt:
    install_recommends: no
    cache_valid_time: 86400
    name:
      - bash-completion
      - byobu
      - chrony
      - curl
      - etckeeper
      - fail2ban
      - git
      - iotop
      - jupyter-notebook
      - manpages
      - ncdu
      - netdata-core
      - netdata-plugins-bash
      - netdata-plugins-python
      - netdata-web
      - nftables
      - nullmailer
      - prometheus-node-exporter
      - pv
      # needed by ansible
      - python3-apt
      - rsync
      - ssl-cert
      - strace
      - tcpdump
      - tmux
      - vim

- name: Configure journald
  tags: journald
  template:
    src: templates/journald.conf
    dest: /etc/systemd/journald.conf
    mode: 0644
    owner: root

- name: enable and restart journald
  tags: journald
  systemd:
    name: systemd-journald.service
    state: restarted
    enabled: yes
    daemon_reload: yes

- name: Autoremove
  tags: autoremove
  apt:
    autoremove: yes

- name: Clean cache
  tags: apt
  apt:
    autoclean: yes

- name: allow netdata.service
  tags: netdata
  blockinfile:
    path: /etc/ooni/nftables/tcp/19999.nft
    create: yes
    block: |
      add rule inet filter input ip saddr {{ lookup('dig', 'prometheus.ooni.org/A') }} tcp dport 19999 counter accept comment "netdata.service"

#- name: reload nftables service
#  systemd:
#    name: nftables.service
#    state: reloaded
#    enabled: yes
#    daemon_reload: yes

- name: reload nftables service
  service: name=nftables state=restarted

- name: configure netdata.service
  tags: netdata
  template:
    src: netdata.conf
    dest: /etc/netdata/netdata.conf

- name: disable netdata emails
  tags: netdata
  blockinfile:
    path: /etc/netdata/conf.d/health_alarm_notify.conf
    create: yes
    block: |
      # Managed by ansible, see roles/base-bullseye/tasks/main.yml
      SEND_EMAIL="NO"

- name: Set timezone
  tags: timezone
  timezone:
    name: Etc/UTC

- name: restart chrony service
  tags: timezone
  systemd:
    name: chrony.service
    state: restarted

- name: configure netdata chrony
  tags: netdata, timezone
  blockinfile:
    path: /etc/netdata/python.d/chrony.conf
    create: yes
    block: |
      # Managed by ansible, see roles/base-bullseye/tasks/main.yml
      update_every: 5
      local:
        command: 'chronyc -n tracking'

- name: configure netdata chrony
  tags: netdata, timezone
  lineinfile:
    path: /usr/lib/netdata/conf.d/python.d.conf
    regexp: '^chrony:'
    line: 'chrony: yes'

#- name: configure netdata nginx
#  blockinfile:
#    path: /etc/netdata/python.d/nginx.conf
#    create: yes
#    block: |
#      # Managed by ansible, see roles/base-bullseye/tasks/main.yml
#      update_every: 5
#      nginx_log:
#        name  : 'nginx_log'
#        path  : '/var/log/nginx/access.log'

#- name: configure netdata haproxy
#  blockinfile:
#    path: /etc/netdata/python.d/haproxy.conf
#    block: |
#      # Managed by ansible, see roles/base-bullseye/tasks/main.yml
#      update_every: 5
#      via_url:
#        url: 'http://127.0.0.1:7000/haproxy_stats;csv;norefresh'

- name: restart netdata service
  tags: netdata, timezone
  systemd:
    name: netdata.service
    state: restarted


# # Vector
# Reads from local journald and sends to monitoring.ooni.org

- name: vector - install vector APT keys
  tags: vectorsender
  shell: curl -s https://repositories.timber.io/public/vector/gpg.3543DB2D0A2BC4B8.key | apt-key add -

- name: vector - set APT repos
  tags: vectorsender
  template:
    src: templates/vector.list
    dest: /etc/apt/sources.list.d/vector.list
    mode: 0644
    owner: root
  register: apt_update_needed

- name: vector - update apt cache
  apt:
    update_cache: yes
  when: apt_update_needed.changed

- name: vector - install pkg
  tags: vectorsender
  apt:
    name: vector

- name: vector - Generate certificates
  tags: vectorsender
  # runs locally
  delegate_to: 127.0.0.1
  shell: |
    ./vault view files/pusher_ca.key.vault | openssl req -x509 -new -nodes -key /dev/stdin -sha256 -days 3650 -subj '/O=OONI/OU=CA/CN=ooni.org' -out oonicacert.pem
    openssl req -newkey rsa:2048 -nodes -days 3650 -keyout node.key -out node-req.pem -subj '/CN=ooni.org/O=OONI temp CA/C=US' -batch
    ./vault view files/pusher_ca.key.vault | openssl x509 -req -days 3650 -set_serial 01 -in node-req.pem -out node-cert.pem -CA oonicacert.pem -CAkey /dev/stdin
  register: certs_ready

- name: vector - Copy TLS certs
  tags: vectorsender
  ansible.builtin.copy:
    src: "{{ item }}"
    dest: /etc/vector/
    mode: '0440'
    owner: vector
  loop:
    - node-cert.pem
    - node-req.pem
    - node.key
    - oonicacert.pem
  when: certs_ready.changed

- name: vector - Delete files
  tags: vectorsender
  # runs locally
  delegate_to: 127.0.0.1
  ansible.builtin.file:
    path: "{{ item }}"
    state: absent
  loop:
    - oonicacert.pem
    - node-cert.pem
    - node-req.pem
    - node.key

- name: vector - configure
  tags: vectorsender
  template:
    src: templates/vector.toml
    dest: /etc/vector/vector.toml

- name: vector - restart service
  tags: vectorsender
  systemd:
    daemon_reload: yes
    enabled: yes
    name: vector.service
    state: restarted
