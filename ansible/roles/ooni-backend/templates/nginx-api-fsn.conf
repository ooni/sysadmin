# Managed by ansible
# roles/ooni-backend/templates/nginx-api-fsn.conf

# Use 2-level cache, 20MB of RAM + 5GB on disk,
proxy_cache_path /var/cache/nginx/ooni-api levels=1:2 keys_zone=apicache:100M
                max_size=5g inactive=24h use_temp_path=off;

# Trust getting real-ip from X-Forwarded-For when the addresses are AWS IPs
# see: https://serverfault.com/a/414166
set_real_ip_from  10.0.0.0/16;
set_real_ip_from  18.0.0.0/8;
set_real_ip_from  3.0.0.0/8;
real_ip_header    X-Forwarded-For;
real_ip_recursive on;

# anonymize ipaddr
map $remote_addr $remote_addr_anon {
  ~(?P<ip>\d+\.\d+\.\d+)\.    $ip.0;
  ~(?P<ip>[^:]+:[^:]+):       $ip::;
  default                     0.0.0.0;
}

# anonymize forwarded ipaddr
map $http_x_forwarded_for $remote_fwd_anon {
  ~(?P<ip>\d+\.\d+\.\d+)\.    $ip.0;
  ~(?P<ip>[^:]+:[^:]+):       $ip::;
  default                     0.0.0.0;
}

# log anonymized ipaddr and caching status
log_format ooni_api_fmt '$remote_addr_anon $remote_fwd_anon $remote_addr $upstream_cache_status [$time_local] '
    '"$request" $status snt:$body_bytes_sent rt:$request_time uprt:$upstream_response_time "$http_referer" "$http_user_agent"';

log_format netdata '$remote_addr_anon - $remote_user [$time_local] '
  '"$request" $status $body_bytes_sent '
  '$request_length $request_time $upstream_response_time '
  '"$http_referer" "$http_user_agent"';

server {
  # TODO(bassosimone): we need support for cleartext HTTP to make sure that requests
  # over Tor correctly land to the proper backend. We are listening on this custom port
  # and we are configuring Tor such that it routes traffic to this port.
  listen 127.0.0.1:17744;

  listen 443 ssl http2 default_server;
  listen [::]:443 ssl http2 default_server;
  server_name _;
  access_log syslog:server=unix:/dev/log,tag=ooniapi,severity=info ooni_api_fmt;
  access_log /var/log/nginx/access.log netdata;

  error_log syslog:server=unix:/dev/log,tag=ooniapi,severity=info;
  gzip on;
  gzip_types text/plain application/xml application/json;

  # TODO: we could use different client_max_body_size and SSL configurations for probe service paths
  # and everyhing else
  client_max_body_size 200M; # for measurement POST

  ssl_certificate /var/lib/dehydrated/certs/backend-fsn.ooni.org/fullchain.pem;
  ssl_certificate_key /var/lib/dehydrated/certs/backend-fsn.ooni.org/privkey.pem;
  ssl_trusted_certificate /var/lib/dehydrated/certs/backend-fsn.ooni.org/chain.pem; # for ssl_stapling_verify

  # Use the intermediate configuration to support legacy probes
  # https://ssl-config.mozilla.org/#server=nginx&version=1.14.2&config=intermediate&openssl=1.1.1d&guideline=5.6
  ssl_session_timeout 5m;
  ssl_session_cache shared:MozSSL:30m;
  ssl_session_tickets off;

  ssl_protocols TLSv1.2 TLSv1.3;
  ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384;
  ssl_prefer_server_ciphers off;

  add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
  add_header X-Frame-Options DENY always;
  add_header X-Content-Type-Options nosniff always;

  # OCSP stapling
  ssl_stapling on;
  ssl_stapling_verify on;

  # verify chain of trust of OCSP response using Root CA and Intermediate certs
  #ssl_trusted_certificate /path/to/root_CA_cert_plus_intermediates;

  resolver 127.0.0.1;

  set $external_remote_addr $remote_addr;
  #if ($remote_addr = "188.166.93.143") {
  #  # If remote_addr is ams-pg-test trust the X-Real-IP header
  #  set $external_remote_addr $http_x_real_ip;
  #}
  #if ($remote_addr = "142.93.237.101") {
  #  # If remote_addr is ams-pg trust the X-Real-IP header
  #  set $external_remote_addr $http_x_real_ip;
  #}
  #if ($remote_addr ~ "^3.") {
  #  # If remote_addr is AWS trust the X-Real-IP header
  #  set $external_remote_addr $http_x_real_ip;
  #}
  #if ($remote_addr ~ "^18.") {
  #  # If remote_addr is AWS trust the X-Real-IP header
  #  set $external_remote_addr $http_x_real_ip;
  #}

  # Registry
  # Should match:
  # - /api/v1/login
  # - /api/v1/register
  # - /api/v1/update
  location ~^/api/v1/(login|register|update) {
      proxy_http_version 1.1;
      proxy_set_header Host $http_host;
      proxy_set_header X-Real-IP $external_remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;
      proxy_read_timeout 900;

      proxy_pass https://ooniprobe.prod.ooni.io:443;
  }

  # Selectively route test-list/urls to the API
  # location ~^/api/v1/test-list/urls {
  location ~^/api/v1/(test-list|urls) {
      proxy_pass http://127.0.0.1:8000;
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $external_remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_cache apicache;
      proxy_cache_min_uses 1;
      proxy_cache_lock on;
      proxy_cache_lock_timeout 30;
      proxy_cache_lock_age 30;
      proxy_cache_use_stale error timeout invalid_header updating;
      proxy_cache_methods HEAD GET;
      # Cache only 200, 301, and 302 by default and for very short.
      # Overridden by the API using the Expires header
      proxy_cache_valid 200 301 302 10s;
      proxy_cache_valid any 0;
      add_header x-cache-status $upstream_cache_status;
      add_header X-Cache-Status $upstream_cache_status;
      add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
      add_header X-Frame-Options DENY always;
      add_header X-Content-Type-Options nosniff always;
  }

  # Orchestrate
  # NOTE: we are now serving this from the ooniapi monolith
  # Should match:
  # - /api/v1/test-list
  # location ~^/api/v1/(test-list|urls) {
  #     proxy_http_version 1.1;
  #     proxy_set_header Host $http_host;
  #     proxy_set_header X-Real-IP $external_remote_addr;
  #     proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
  #     proxy_set_header X-Forwarded-Proto $scheme;
  #     proxy_read_timeout 900;

  #     proxy_pass https://orchestrate.ooni.io:443;
  #     add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
  #     add_header X-Frame-Options DENY always;
  #     add_header X-Content-Type-Options nosniff always;

  # }

  # Web Connectivity Test Helper
  # Should match:
  # - /
  # - /status
  #
  # The fact that it responds to / means that we may have to differentiate
  # via the Host record.
  # TODO We should check if clients will respect a suffix added to by the
  # bouncer in the returned field, otherwise new clients should use another
  # form
  location ~^/web-connectivity/(status) {
      proxy_http_version 1.1;
      proxy_set_header Host $http_host;
      proxy_set_header X-Real-IP $external_remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;
      proxy_read_timeout 900;

      proxy_pass https://0.th.ooni.org;
      add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
      add_header X-Frame-Options DENY always;
      add_header X-Content-Type-Options nosniff always;
      add_header Host "0.th.ooni.org";
  }

  location /whoami {
      return 200 "backend-fsn.ooni.org";
  }

  location /metrics {
      return 200 '';
  }

  # Expose event detector RSS/atom feeds
  location ~ ^/detector {
    root /var/lib;
    default_type application/xml;
  }

  # Expose (only) Netdata badges
  location ~ ^/netdata/badge {
    rewrite ^/netdata/badge /api/v1/badge.svg break;
    proxy_pass http://127.0.0.1:19999;
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $external_remote_addr;
  }

  # Expose package version badges
  location /package_badges {
    root /var/www;
    add_header Pragma "no-cache";
    add_header Cache-Control "no-store, no-cache, must-revalidate, post-check=0, pre-check=0";
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
    add_header X-Frame-Options DENY always;
    add_header X-Content-Type-Options nosniff always;
  }

  # 2022-09-01 20:08 CEST temporarily block a bot scraping /files/download/*
  location ~^/files/download/ {
      return 301 https://explorer.ooni.org/;
  }

  # new API
  location / {

    # Protect /apidocs invoked with url= and/or urls= args
    if ($uri ~ "^/apidocs") { set $block_apidocs X; }
    if ($args ~ "url=" ) { set $block_apidocs "${block_apidocs}Y"; }
    if ($args ~ "urls=" ) { set $block_apidocs "${block_apidocs}Y"; }
    if ($block_apidocs ~ "XY") { return 403; } # nested "if" are not supported

    deny 216.244.66.0/24; #  DotBot/1.2
    deny 114.119.128.0/19;  # PetalBot
    allow all;
    proxy_pass http://127.0.0.1:8000;
    proxy_set_header Host $host;

    # match test-helper POST to / and forward traffic to a TH
    if ($request_uri = "/") { set $forward_to_th "YE"; }
    if ($request_method = POST) { set $forward_to_th "${forward_to_th}S"; }
    if ($forward_to_th = "YES") {
      proxy_pass https://0.th.ooni.org;
    }

    proxy_set_header X-Real-IP $external_remote_addr;

    proxy_cache apicache;
    proxy_cache_min_uses 1;
    proxy_cache_lock on;
    proxy_cache_lock_timeout 30;
    proxy_cache_lock_age 30;
    proxy_cache_use_stale error timeout invalid_header updating;
    proxy_cache_methods HEAD GET;
    # Cache only 200, 301, and 302 by default and for very short.
    # Overridden by the API using the Expires header
    proxy_cache_valid 200 301 302 10s;
    proxy_cache_valid any 0;
    add_header x-cache-status $upstream_cache_status;
    add_header X-Cache-Status $upstream_cache_status;
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
    add_header X-Frame-Options DENY always;
    add_header X-Content-Type-Options nosniff always;
  }

  # Expose the measurement spool directory
  location /measurement_spool/ {
    alias /var/lib/ooniapi/measurements/incoming/;
    autoindex off;
    sendfile on;
    tcp_nopush on;
    if_modified_since off;
    expires off;
    etag off;
  }
}

# Used by Netdata to monitor Nginx
server {
  listen 127.0.0.1:80;
  server_name localhost;
  location = /stub_status {
    stub_status;
  }
}
