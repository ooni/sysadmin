## Deployed by ansible, see roles/ooni-backend/templates/haproxy.cfg

# Proxies to:
#   - local nginx
#   - remote test helpers
# See http://interactive.blockdiag.com/?compression=deflate&src=eJyFjjELwjAQhXd_xeFuEdpBEAURBwfBXSSk6ZkEr7mSZGgR_7tNXdoiuD2--7j3SmL1rKzU8FoAFEUOqz0Y2XhuuxSHICKLiCEKg9Sg3_bmSHHaujaxISRyuJ7hRrJEgh0slVTGOr28Txz2yvQvvYw44R617XGXMTubWU7HzXq26kfl8XISykgidBphVP-whLPuOtRRhIaZ_ogVlt8d7PVYDXkS3x_pgmPP

global
  log /dev/log	local0 info alert
  log /dev/log	local1 notice alert
  chroot /var/lib/haproxy
  stats socket /run/haproxy/admin.sock mode 660 level admin
  stats timeout 30s
  user haproxy
  group haproxy
  daemon

  # Default SSL material locations
  ca-base /etc/ssl/certs
  crt-base /etc/ssl/private

  # See: https://ssl-config.mozilla.org/#server=haproxy&server-version=2.0.3&config=intermediate
  ssl-default-bind-ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384
  ssl-default-bind-ciphersuites TLS_AES_128_GCM_SHA256:TLS_AES_256_GCM_SHA384:TLS_CHACHA20_POLY1305_SHA256
  ssl-default-bind-options ssl-min-ver TLSv1.2 no-tls-tickets

defaults
  log global
  mode  http
  option  httplog
  option  dontlognull
        timeout connect 5000
        timeout client  50000
        timeout server  50000
  errorfile 400 /etc/haproxy/errors/400.http
  errorfile 403 /etc/haproxy/errors/403.http
  errorfile 408 /etc/haproxy/errors/408.http
  errorfile 500 /etc/haproxy/errors/500.http
  errorfile 502 /etc/haproxy/errors/502.http
  errorfile 503 /etc/haproxy/errors/503.http
  errorfile 504 /etc/haproxy/errors/504.http

  log-format "%[var(txn.src_ipaddr_masked)] %ft > %b > %s %TR/%Tw/%Tc/%Tr/%Ta %ST %B %CC %CS %tsc %ac/%fc/%bc/%sc/%rc %sq/%bq %hr %hs %{+Q}r"

frontend haproxy_metrics
  # Metrics exposed on TLS port 444
  # File generated by /etc/dehydrated/haproxy_hook.sh
  bind :444 ssl crt /var/lib/dehydrated/certs/"{{ inventory_hostname }}"/privkey.pem.haproxy

  http-request set-var(txn.src_ipaddr_masked) src,ipmask(24,64)

  # /__haproxy_stats stats page
  stats enable
  stats uri /__haproxy_stats
  stats refresh 5s

  # /__haproxy_prom_metrics prometheus metrics
  http-request use-service prometheus-exporter if { path /__haproxy_prom_metrics }


frontend public_tls
  # TLS on port 443
  # File generated by /etc/dehydrated/haproxy_hook.sh
  bind :443 ssl crt /var/lib/dehydrated/certs/{{ inventory_hostname }}/privkey.pem.haproxy

  http-request set-var(txn.src_ipaddr_masked) src,ipmask(24,64)

  # test helpers
  default_backend lb_test_helpers

  # deb.ooni.org
  acl ACL_deb_ooni_org hdr(host) -i deb.ooni.org
  use_backend deb_ooni_org if ACL_deb_ooni_org

  # Nginx
  use_backend nginx if !{ path / } || !{ method POST }


frontend public_80
  # Forwarded to Nginx for ACME and deb.ooni.org
  bind :80

  http-request set-var(txn.src_ipaddr_masked) src,ipmask(24,64)

  # ACME
  use_backend nginx if { path_beg /.well-known/acme-challenge }

  # deb.ooni.org
  acl ACL_deb_ooni_org hdr(host) -i deb.ooni.org
  use_backend deb_ooni_org if ACL_deb_ooni_org



backend nginx
  # Local Nginx is in front of the API and more. See diagram.
  default-server check
  option forwardfor
  #option httpchk GET /
  # forward to local nginx
  server nginx localhost:17744


backend lb_test_helpers
  # Remote testn helpers
  default-server check
  option forwardfor
  http-check send meth POST  uri /  hdr Content-Type application/json  body "{}"
  http-check send-state
  http-check comment "TH POST with empty JSON"

  server th0 0.th.ooni.org:443 ssl verify none
  server th1 1.th.ooni.org:443 ssl verify none
  server th2 2.th.ooni.org:443 ssl verify none
  server th3 3.th.ooni.org:443 ssl verify none
  #option httpchk


backend deb_ooni_org
  #default-server check
  option forwardfor
  server s3-ooni-deb ooni-deb.s3.eu-central-1.amazonaws.com ssl verify none

